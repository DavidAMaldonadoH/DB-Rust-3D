Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> instructions
Rule 2     instructions -> instructions instruction
Rule 3     instructions -> instruction
Rule 4     instruction -> declaration SEMICOLON
Rule 5     instruction -> asignation SEMICOLON
Rule 6     instruction -> println SEMICOLON
Rule 7     instruction -> if_st
Rule 8     instruction -> function
Rule 9     statement -> LCBRACKET instructions RCBRACKET
Rule 10    primitive_type -> RINT
Rule 11    primitive_type -> RFLOAT
Rule 12    primitive_type -> RBOOL
Rule 13    primitive_type -> RCHAR
Rule 14    primitive_type -> AMPERSAND RSTR
Rule 15    primitive_type -> RSTRING
Rule 16    primitive_type -> RUSIZE
Rule 17    declaration -> RLET RMUT ID COLON primitive_type EQUAL expression
Rule 18    declaration -> RLET ID COLON primitive_type EQUAL expression
Rule 19    asignation -> ID EQUAL expression
Rule 20    println -> RPRINTLN NOT LPAREN expressions RPAREN
Rule 21    if_st -> RIF expression statement else_st
Rule 22    else_st -> RELSE statement
Rule 23    else_st -> RELSE if_st
Rule 24    else_st -> empty
Rule 25    function -> RFN ID LPAREN RPAREN statement
Rule 26    expressions -> expressions COMMA expression
Rule 27    expressions -> expression
Rule 28    expression -> expression RAS primitive_type
Rule 29    expression -> MINUS expression
Rule 30    expression -> expression PLUS expression
Rule 31    expression -> expression MINUS expression
Rule 32    expression -> expression TIMES expression
Rule 33    expression -> expression DIVIDE expression
Rule 34    expression -> expression MODULE expression
Rule 35    expression -> expression EQUALS expression
Rule 36    expression -> expression NEQUALS expression
Rule 37    expression -> expression LTHAN expression
Rule 38    expression -> expression LORE expression
Rule 39    expression -> expression GTHAN expression
Rule 40    expression -> expression GORE expression
Rule 41    expression -> expression AND expression
Rule 42    expression -> expression OR expression
Rule 43    expression -> NOT expression
Rule 44    expression -> LPAREN expression RPAREN
Rule 45    expression -> expression DOT RTOSTRING LPAREN RPAREN
Rule 46    expression -> expression DOT RTOOWNED LPAREN RPAREN
Rule 47    expression -> INT
Rule 48    expression -> FLOAT
Rule 49    expression -> STRING
Rule 50    expression -> CHAR
Rule 51    expression -> RTRUE
Rule 52    expression -> RFALSE
Rule 53    expression -> ID
Rule 54    empty -> <empty>

Terminals, with rules where they appear

AMPERSAND            : 14
AND                  : 41
CHAR                 : 50
COLON                : 17 18
COMMA                : 26
DIVIDE               : 33
DOT                  : 45 46
EQUAL                : 17 18 19
EQUALS               : 35
FLOAT                : 48
GORE                 : 40
GTHAN                : 39
ID                   : 17 18 19 25 53
INT                  : 47
LCBRACKET            : 9
LORE                 : 38
LPAREN               : 20 25 44 45 46
LTHAN                : 37
MINUS                : 29 31
MODULE               : 34
NEQUALS              : 36
NOT                  : 20 43
OR                   : 42
PLUS                 : 30
RAS                  : 28
RBOOL                : 12
RCBRACKET            : 9
RCHAR                : 13
RELSE                : 22 23
RFALSE               : 52
RFLOAT               : 11
RFN                  : 25
RIF                  : 21
RINT                 : 10
RLET                 : 17 18
RMUT                 : 17
RPAREN               : 20 25 44 45 46
RPRINTLN             : 20
RSTR                 : 14
RSTRING              : 15
RTOOWNED             : 46
RTOSTRING            : 45
RTRUE                : 51
RUSIZE               : 16
SEMICOLON            : 4 5 6
STRING               : 49
TIMES                : 32
error                : 

Nonterminals, with rules where they appear

asignation           : 5
declaration          : 4
else_st              : 21
empty                : 24
expression           : 17 18 19 21 26 27 28 29 30 30 31 31 32 32 33 33 34 34 35 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 44 45 46
expressions          : 20 26
function             : 8
if_st                : 7 23
init                 : 0
instruction          : 2 3
instructions         : 1 2 9
primitive_type       : 17 18 28
println              : 6
statement            : 21 22 25

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instructions
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . declaration SEMICOLON
    (5) instruction -> . asignation SEMICOLON
    (6) instruction -> . println SEMICOLON
    (7) instruction -> . if_st
    (8) instruction -> . function
    (17) declaration -> . RLET RMUT ID COLON primitive_type EQUAL expression
    (18) declaration -> . RLET ID COLON primitive_type EQUAL expression
    (19) asignation -> . ID EQUAL expression
    (20) println -> . RPRINTLN NOT LPAREN expressions RPAREN
    (21) if_st -> . RIF expression statement else_st
    (25) function -> . RFN ID LPAREN RPAREN statement

    RLET            shift and go to state 9
    ID              shift and go to state 10
    RPRINTLN        shift and go to state 11
    RIF             shift and go to state 12
    RFN             shift and go to state 13

    init                           shift and go to state 1
    instructions                   shift and go to state 2
    instruction                    shift and go to state 3
    declaration                    shift and go to state 4
    asignation                     shift and go to state 5
    println                        shift and go to state 6
    if_st                          shift and go to state 7
    function                       shift and go to state 8

state 1

    (0) S' -> init .



state 2

    (1) init -> instructions .
    (2) instructions -> instructions . instruction
    (4) instruction -> . declaration SEMICOLON
    (5) instruction -> . asignation SEMICOLON
    (6) instruction -> . println SEMICOLON
    (7) instruction -> . if_st
    (8) instruction -> . function
    (17) declaration -> . RLET RMUT ID COLON primitive_type EQUAL expression
    (18) declaration -> . RLET ID COLON primitive_type EQUAL expression
    (19) asignation -> . ID EQUAL expression
    (20) println -> . RPRINTLN NOT LPAREN expressions RPAREN
    (21) if_st -> . RIF expression statement else_st
    (25) function -> . RFN ID LPAREN RPAREN statement

    $end            reduce using rule 1 (init -> instructions .)
    RLET            shift and go to state 9
    ID              shift and go to state 10
    RPRINTLN        shift and go to state 11
    RIF             shift and go to state 12
    RFN             shift and go to state 13

    instruction                    shift and go to state 14
    declaration                    shift and go to state 4
    asignation                     shift and go to state 5
    println                        shift and go to state 6
    if_st                          shift and go to state 7
    function                       shift and go to state 8

state 3

    (3) instructions -> instruction .

    RLET            reduce using rule 3 (instructions -> instruction .)
    ID              reduce using rule 3 (instructions -> instruction .)
    RPRINTLN        reduce using rule 3 (instructions -> instruction .)
    RIF             reduce using rule 3 (instructions -> instruction .)
    RFN             reduce using rule 3 (instructions -> instruction .)
    $end            reduce using rule 3 (instructions -> instruction .)
    RCBRACKET       reduce using rule 3 (instructions -> instruction .)


state 4

    (4) instruction -> declaration . SEMICOLON

    SEMICOLON       shift and go to state 15


state 5

    (5) instruction -> asignation . SEMICOLON

    SEMICOLON       shift and go to state 16


state 6

    (6) instruction -> println . SEMICOLON

    SEMICOLON       shift and go to state 17


state 7

    (7) instruction -> if_st .

    RLET            reduce using rule 7 (instruction -> if_st .)
    ID              reduce using rule 7 (instruction -> if_st .)
    RPRINTLN        reduce using rule 7 (instruction -> if_st .)
    RIF             reduce using rule 7 (instruction -> if_st .)
    RFN             reduce using rule 7 (instruction -> if_st .)
    $end            reduce using rule 7 (instruction -> if_st .)
    RCBRACKET       reduce using rule 7 (instruction -> if_st .)


state 8

    (8) instruction -> function .

    RLET            reduce using rule 8 (instruction -> function .)
    ID              reduce using rule 8 (instruction -> function .)
    RPRINTLN        reduce using rule 8 (instruction -> function .)
    RIF             reduce using rule 8 (instruction -> function .)
    RFN             reduce using rule 8 (instruction -> function .)
    $end            reduce using rule 8 (instruction -> function .)
    RCBRACKET       reduce using rule 8 (instruction -> function .)


state 9

    (17) declaration -> RLET . RMUT ID COLON primitive_type EQUAL expression
    (18) declaration -> RLET . ID COLON primitive_type EQUAL expression

    RMUT            shift and go to state 18
    ID              shift and go to state 19


state 10

    (19) asignation -> ID . EQUAL expression

    EQUAL           shift and go to state 20


state 11

    (20) println -> RPRINTLN . NOT LPAREN expressions RPAREN

    NOT             shift and go to state 21


state 12

    (21) if_st -> RIF . expression statement else_st
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 22

state 13

    (25) function -> RFN . ID LPAREN RPAREN statement

    ID              shift and go to state 33


state 14

    (2) instructions -> instructions instruction .

    RLET            reduce using rule 2 (instructions -> instructions instruction .)
    ID              reduce using rule 2 (instructions -> instructions instruction .)
    RPRINTLN        reduce using rule 2 (instructions -> instructions instruction .)
    RIF             reduce using rule 2 (instructions -> instructions instruction .)
    RFN             reduce using rule 2 (instructions -> instructions instruction .)
    $end            reduce using rule 2 (instructions -> instructions instruction .)
    RCBRACKET       reduce using rule 2 (instructions -> instructions instruction .)


state 15

    (4) instruction -> declaration SEMICOLON .

    RLET            reduce using rule 4 (instruction -> declaration SEMICOLON .)
    ID              reduce using rule 4 (instruction -> declaration SEMICOLON .)
    RPRINTLN        reduce using rule 4 (instruction -> declaration SEMICOLON .)
    RIF             reduce using rule 4 (instruction -> declaration SEMICOLON .)
    RFN             reduce using rule 4 (instruction -> declaration SEMICOLON .)
    $end            reduce using rule 4 (instruction -> declaration SEMICOLON .)
    RCBRACKET       reduce using rule 4 (instruction -> declaration SEMICOLON .)


state 16

    (5) instruction -> asignation SEMICOLON .

    RLET            reduce using rule 5 (instruction -> asignation SEMICOLON .)
    ID              reduce using rule 5 (instruction -> asignation SEMICOLON .)
    RPRINTLN        reduce using rule 5 (instruction -> asignation SEMICOLON .)
    RIF             reduce using rule 5 (instruction -> asignation SEMICOLON .)
    RFN             reduce using rule 5 (instruction -> asignation SEMICOLON .)
    $end            reduce using rule 5 (instruction -> asignation SEMICOLON .)
    RCBRACKET       reduce using rule 5 (instruction -> asignation SEMICOLON .)


state 17

    (6) instruction -> println SEMICOLON .

    RLET            reduce using rule 6 (instruction -> println SEMICOLON .)
    ID              reduce using rule 6 (instruction -> println SEMICOLON .)
    RPRINTLN        reduce using rule 6 (instruction -> println SEMICOLON .)
    RIF             reduce using rule 6 (instruction -> println SEMICOLON .)
    RFN             reduce using rule 6 (instruction -> println SEMICOLON .)
    $end            reduce using rule 6 (instruction -> println SEMICOLON .)
    RCBRACKET       reduce using rule 6 (instruction -> println SEMICOLON .)


state 18

    (17) declaration -> RLET RMUT . ID COLON primitive_type EQUAL expression

    ID              shift and go to state 34


state 19

    (18) declaration -> RLET ID . COLON primitive_type EQUAL expression

    COLON           shift and go to state 35


state 20

    (19) asignation -> ID EQUAL . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 36

state 21

    (20) println -> RPRINTLN NOT . LPAREN expressions RPAREN

    LPAREN          shift and go to state 37


state 22

    (21) if_st -> RIF expression . statement else_st
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN
    (9) statement -> . LCBRACKET instructions RCBRACKET

    RAS             shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    EQUALS          shift and go to state 45
    NEQUALS         shift and go to state 46
    LTHAN           shift and go to state 47
    LORE            shift and go to state 48
    GTHAN           shift and go to state 49
    GORE            shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    DOT             shift and go to state 53
    LCBRACKET       shift and go to state 54

    statement                      shift and go to state 38

state 23

    (29) expression -> MINUS . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 55

state 24

    (43) expression -> NOT . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 56

state 25

    (44) expression -> LPAREN . expression RPAREN
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 57

state 26

    (47) expression -> INT .

    RAS             reduce using rule 47 (expression -> INT .)
    PLUS            reduce using rule 47 (expression -> INT .)
    MINUS           reduce using rule 47 (expression -> INT .)
    TIMES           reduce using rule 47 (expression -> INT .)
    DIVIDE          reduce using rule 47 (expression -> INT .)
    MODULE          reduce using rule 47 (expression -> INT .)
    EQUALS          reduce using rule 47 (expression -> INT .)
    NEQUALS         reduce using rule 47 (expression -> INT .)
    LTHAN           reduce using rule 47 (expression -> INT .)
    LORE            reduce using rule 47 (expression -> INT .)
    GTHAN           reduce using rule 47 (expression -> INT .)
    GORE            reduce using rule 47 (expression -> INT .)
    AND             reduce using rule 47 (expression -> INT .)
    OR              reduce using rule 47 (expression -> INT .)
    DOT             reduce using rule 47 (expression -> INT .)
    LCBRACKET       reduce using rule 47 (expression -> INT .)
    SEMICOLON       reduce using rule 47 (expression -> INT .)
    RPAREN          reduce using rule 47 (expression -> INT .)
    COMMA           reduce using rule 47 (expression -> INT .)


state 27

    (48) expression -> FLOAT .

    RAS             reduce using rule 48 (expression -> FLOAT .)
    PLUS            reduce using rule 48 (expression -> FLOAT .)
    MINUS           reduce using rule 48 (expression -> FLOAT .)
    TIMES           reduce using rule 48 (expression -> FLOAT .)
    DIVIDE          reduce using rule 48 (expression -> FLOAT .)
    MODULE          reduce using rule 48 (expression -> FLOAT .)
    EQUALS          reduce using rule 48 (expression -> FLOAT .)
    NEQUALS         reduce using rule 48 (expression -> FLOAT .)
    LTHAN           reduce using rule 48 (expression -> FLOAT .)
    LORE            reduce using rule 48 (expression -> FLOAT .)
    GTHAN           reduce using rule 48 (expression -> FLOAT .)
    GORE            reduce using rule 48 (expression -> FLOAT .)
    AND             reduce using rule 48 (expression -> FLOAT .)
    OR              reduce using rule 48 (expression -> FLOAT .)
    DOT             reduce using rule 48 (expression -> FLOAT .)
    LCBRACKET       reduce using rule 48 (expression -> FLOAT .)
    SEMICOLON       reduce using rule 48 (expression -> FLOAT .)
    RPAREN          reduce using rule 48 (expression -> FLOAT .)
    COMMA           reduce using rule 48 (expression -> FLOAT .)


state 28

    (49) expression -> STRING .

    RAS             reduce using rule 49 (expression -> STRING .)
    PLUS            reduce using rule 49 (expression -> STRING .)
    MINUS           reduce using rule 49 (expression -> STRING .)
    TIMES           reduce using rule 49 (expression -> STRING .)
    DIVIDE          reduce using rule 49 (expression -> STRING .)
    MODULE          reduce using rule 49 (expression -> STRING .)
    EQUALS          reduce using rule 49 (expression -> STRING .)
    NEQUALS         reduce using rule 49 (expression -> STRING .)
    LTHAN           reduce using rule 49 (expression -> STRING .)
    LORE            reduce using rule 49 (expression -> STRING .)
    GTHAN           reduce using rule 49 (expression -> STRING .)
    GORE            reduce using rule 49 (expression -> STRING .)
    AND             reduce using rule 49 (expression -> STRING .)
    OR              reduce using rule 49 (expression -> STRING .)
    DOT             reduce using rule 49 (expression -> STRING .)
    LCBRACKET       reduce using rule 49 (expression -> STRING .)
    SEMICOLON       reduce using rule 49 (expression -> STRING .)
    RPAREN          reduce using rule 49 (expression -> STRING .)
    COMMA           reduce using rule 49 (expression -> STRING .)


state 29

    (50) expression -> CHAR .

    RAS             reduce using rule 50 (expression -> CHAR .)
    PLUS            reduce using rule 50 (expression -> CHAR .)
    MINUS           reduce using rule 50 (expression -> CHAR .)
    TIMES           reduce using rule 50 (expression -> CHAR .)
    DIVIDE          reduce using rule 50 (expression -> CHAR .)
    MODULE          reduce using rule 50 (expression -> CHAR .)
    EQUALS          reduce using rule 50 (expression -> CHAR .)
    NEQUALS         reduce using rule 50 (expression -> CHAR .)
    LTHAN           reduce using rule 50 (expression -> CHAR .)
    LORE            reduce using rule 50 (expression -> CHAR .)
    GTHAN           reduce using rule 50 (expression -> CHAR .)
    GORE            reduce using rule 50 (expression -> CHAR .)
    AND             reduce using rule 50 (expression -> CHAR .)
    OR              reduce using rule 50 (expression -> CHAR .)
    DOT             reduce using rule 50 (expression -> CHAR .)
    LCBRACKET       reduce using rule 50 (expression -> CHAR .)
    SEMICOLON       reduce using rule 50 (expression -> CHAR .)
    RPAREN          reduce using rule 50 (expression -> CHAR .)
    COMMA           reduce using rule 50 (expression -> CHAR .)


state 30

    (51) expression -> RTRUE .

    RAS             reduce using rule 51 (expression -> RTRUE .)
    PLUS            reduce using rule 51 (expression -> RTRUE .)
    MINUS           reduce using rule 51 (expression -> RTRUE .)
    TIMES           reduce using rule 51 (expression -> RTRUE .)
    DIVIDE          reduce using rule 51 (expression -> RTRUE .)
    MODULE          reduce using rule 51 (expression -> RTRUE .)
    EQUALS          reduce using rule 51 (expression -> RTRUE .)
    NEQUALS         reduce using rule 51 (expression -> RTRUE .)
    LTHAN           reduce using rule 51 (expression -> RTRUE .)
    LORE            reduce using rule 51 (expression -> RTRUE .)
    GTHAN           reduce using rule 51 (expression -> RTRUE .)
    GORE            reduce using rule 51 (expression -> RTRUE .)
    AND             reduce using rule 51 (expression -> RTRUE .)
    OR              reduce using rule 51 (expression -> RTRUE .)
    DOT             reduce using rule 51 (expression -> RTRUE .)
    LCBRACKET       reduce using rule 51 (expression -> RTRUE .)
    SEMICOLON       reduce using rule 51 (expression -> RTRUE .)
    RPAREN          reduce using rule 51 (expression -> RTRUE .)
    COMMA           reduce using rule 51 (expression -> RTRUE .)


state 31

    (52) expression -> RFALSE .

    RAS             reduce using rule 52 (expression -> RFALSE .)
    PLUS            reduce using rule 52 (expression -> RFALSE .)
    MINUS           reduce using rule 52 (expression -> RFALSE .)
    TIMES           reduce using rule 52 (expression -> RFALSE .)
    DIVIDE          reduce using rule 52 (expression -> RFALSE .)
    MODULE          reduce using rule 52 (expression -> RFALSE .)
    EQUALS          reduce using rule 52 (expression -> RFALSE .)
    NEQUALS         reduce using rule 52 (expression -> RFALSE .)
    LTHAN           reduce using rule 52 (expression -> RFALSE .)
    LORE            reduce using rule 52 (expression -> RFALSE .)
    GTHAN           reduce using rule 52 (expression -> RFALSE .)
    GORE            reduce using rule 52 (expression -> RFALSE .)
    AND             reduce using rule 52 (expression -> RFALSE .)
    OR              reduce using rule 52 (expression -> RFALSE .)
    DOT             reduce using rule 52 (expression -> RFALSE .)
    LCBRACKET       reduce using rule 52 (expression -> RFALSE .)
    SEMICOLON       reduce using rule 52 (expression -> RFALSE .)
    RPAREN          reduce using rule 52 (expression -> RFALSE .)
    COMMA           reduce using rule 52 (expression -> RFALSE .)


state 32

    (53) expression -> ID .

    RAS             reduce using rule 53 (expression -> ID .)
    PLUS            reduce using rule 53 (expression -> ID .)
    MINUS           reduce using rule 53 (expression -> ID .)
    TIMES           reduce using rule 53 (expression -> ID .)
    DIVIDE          reduce using rule 53 (expression -> ID .)
    MODULE          reduce using rule 53 (expression -> ID .)
    EQUALS          reduce using rule 53 (expression -> ID .)
    NEQUALS         reduce using rule 53 (expression -> ID .)
    LTHAN           reduce using rule 53 (expression -> ID .)
    LORE            reduce using rule 53 (expression -> ID .)
    GTHAN           reduce using rule 53 (expression -> ID .)
    GORE            reduce using rule 53 (expression -> ID .)
    AND             reduce using rule 53 (expression -> ID .)
    OR              reduce using rule 53 (expression -> ID .)
    DOT             reduce using rule 53 (expression -> ID .)
    LCBRACKET       reduce using rule 53 (expression -> ID .)
    SEMICOLON       reduce using rule 53 (expression -> ID .)
    RPAREN          reduce using rule 53 (expression -> ID .)
    COMMA           reduce using rule 53 (expression -> ID .)


state 33

    (25) function -> RFN ID . LPAREN RPAREN statement

    LPAREN          shift and go to state 58


state 34

    (17) declaration -> RLET RMUT ID . COLON primitive_type EQUAL expression

    COLON           shift and go to state 59


state 35

    (18) declaration -> RLET ID COLON . primitive_type EQUAL expression
    (10) primitive_type -> . RINT
    (11) primitive_type -> . RFLOAT
    (12) primitive_type -> . RBOOL
    (13) primitive_type -> . RCHAR
    (14) primitive_type -> . AMPERSAND RSTR
    (15) primitive_type -> . RSTRING
    (16) primitive_type -> . RUSIZE

    RINT            shift and go to state 61
    RFLOAT          shift and go to state 62
    RBOOL           shift and go to state 63
    RCHAR           shift and go to state 64
    AMPERSAND       shift and go to state 65
    RSTRING         shift and go to state 66
    RUSIZE          shift and go to state 67

    primitive_type                 shift and go to state 60

state 36

    (19) asignation -> ID EQUAL expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    SEMICOLON       reduce using rule 19 (asignation -> ID EQUAL expression .)
    RAS             shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    EQUALS          shift and go to state 45
    NEQUALS         shift and go to state 46
    LTHAN           shift and go to state 47
    LORE            shift and go to state 48
    GTHAN           shift and go to state 49
    GORE            shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    DOT             shift and go to state 53


state 37

    (20) println -> RPRINTLN NOT LPAREN . expressions RPAREN
    (26) expressions -> . expressions COMMA expression
    (27) expressions -> . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expressions                    shift and go to state 68
    expression                     shift and go to state 69

state 38

    (21) if_st -> RIF expression statement . else_st
    (22) else_st -> . RELSE statement
    (23) else_st -> . RELSE if_st
    (24) else_st -> . empty
    (54) empty -> .

    RELSE           shift and go to state 71
    RLET            reduce using rule 54 (empty -> .)
    ID              reduce using rule 54 (empty -> .)
    RPRINTLN        reduce using rule 54 (empty -> .)
    RIF             reduce using rule 54 (empty -> .)
    RFN             reduce using rule 54 (empty -> .)
    $end            reduce using rule 54 (empty -> .)
    RCBRACKET       reduce using rule 54 (empty -> .)

    else_st                        shift and go to state 70
    empty                          shift and go to state 72

state 39

    (28) expression -> expression RAS . primitive_type
    (10) primitive_type -> . RINT
    (11) primitive_type -> . RFLOAT
    (12) primitive_type -> . RBOOL
    (13) primitive_type -> . RCHAR
    (14) primitive_type -> . AMPERSAND RSTR
    (15) primitive_type -> . RSTRING
    (16) primitive_type -> . RUSIZE

    RINT            shift and go to state 61
    RFLOAT          shift and go to state 62
    RBOOL           shift and go to state 63
    RCHAR           shift and go to state 64
    AMPERSAND       shift and go to state 65
    RSTRING         shift and go to state 66
    RUSIZE          shift and go to state 67

    primitive_type                 shift and go to state 73

state 40

    (30) expression -> expression PLUS . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 74

state 41

    (31) expression -> expression MINUS . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 75

state 42

    (32) expression -> expression TIMES . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 76

state 43

    (33) expression -> expression DIVIDE . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 77

state 44

    (34) expression -> expression MODULE . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 78

state 45

    (35) expression -> expression EQUALS . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 79

state 46

    (36) expression -> expression NEQUALS . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 80

state 47

    (37) expression -> expression LTHAN . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 81

state 48

    (38) expression -> expression LORE . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 82

state 49

    (39) expression -> expression GTHAN . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 83

state 50

    (40) expression -> expression GORE . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 84

state 51

    (41) expression -> expression AND . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 85

state 52

    (42) expression -> expression OR . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 86

state 53

    (45) expression -> expression DOT . RTOSTRING LPAREN RPAREN
    (46) expression -> expression DOT . RTOOWNED LPAREN RPAREN

    RTOSTRING       shift and go to state 87
    RTOOWNED        shift and go to state 88


state 54

    (9) statement -> LCBRACKET . instructions RCBRACKET
    (2) instructions -> . instructions instruction
    (3) instructions -> . instruction
    (4) instruction -> . declaration SEMICOLON
    (5) instruction -> . asignation SEMICOLON
    (6) instruction -> . println SEMICOLON
    (7) instruction -> . if_st
    (8) instruction -> . function
    (17) declaration -> . RLET RMUT ID COLON primitive_type EQUAL expression
    (18) declaration -> . RLET ID COLON primitive_type EQUAL expression
    (19) asignation -> . ID EQUAL expression
    (20) println -> . RPRINTLN NOT LPAREN expressions RPAREN
    (21) if_st -> . RIF expression statement else_st
    (25) function -> . RFN ID LPAREN RPAREN statement

    RLET            shift and go to state 9
    ID              shift and go to state 10
    RPRINTLN        shift and go to state 11
    RIF             shift and go to state 12
    RFN             shift and go to state 13

    instructions                   shift and go to state 89
    instruction                    shift and go to state 3
    declaration                    shift and go to state 4
    asignation                     shift and go to state 5
    println                        shift and go to state 6
    if_st                          shift and go to state 7
    function                       shift and go to state 8

state 55

    (29) expression -> MINUS expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    RAS             reduce using rule 29 (expression -> MINUS expression .)
    PLUS            reduce using rule 29 (expression -> MINUS expression .)
    MINUS           reduce using rule 29 (expression -> MINUS expression .)
    TIMES           reduce using rule 29 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 29 (expression -> MINUS expression .)
    MODULE          reduce using rule 29 (expression -> MINUS expression .)
    EQUALS          reduce using rule 29 (expression -> MINUS expression .)
    NEQUALS         reduce using rule 29 (expression -> MINUS expression .)
    LTHAN           reduce using rule 29 (expression -> MINUS expression .)
    LORE            reduce using rule 29 (expression -> MINUS expression .)
    GTHAN           reduce using rule 29 (expression -> MINUS expression .)
    GORE            reduce using rule 29 (expression -> MINUS expression .)
    AND             reduce using rule 29 (expression -> MINUS expression .)
    OR              reduce using rule 29 (expression -> MINUS expression .)
    LCBRACKET       reduce using rule 29 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 29 (expression -> MINUS expression .)
    RPAREN          reduce using rule 29 (expression -> MINUS expression .)
    COMMA           reduce using rule 29 (expression -> MINUS expression .)
    DOT             shift and go to state 53

  ! DOT             [ reduce using rule 29 (expression -> MINUS expression .) ]
  ! RAS             [ shift and go to state 39 ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! MODULE          [ shift and go to state 44 ]
  ! EQUALS          [ shift and go to state 45 ]
  ! NEQUALS         [ shift and go to state 46 ]
  ! LTHAN           [ shift and go to state 47 ]
  ! LORE            [ shift and go to state 48 ]
  ! GTHAN           [ shift and go to state 49 ]
  ! GORE            [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 56

    (43) expression -> NOT expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    RAS             reduce using rule 43 (expression -> NOT expression .)
    PLUS            reduce using rule 43 (expression -> NOT expression .)
    MINUS           reduce using rule 43 (expression -> NOT expression .)
    TIMES           reduce using rule 43 (expression -> NOT expression .)
    DIVIDE          reduce using rule 43 (expression -> NOT expression .)
    MODULE          reduce using rule 43 (expression -> NOT expression .)
    EQUALS          reduce using rule 43 (expression -> NOT expression .)
    NEQUALS         reduce using rule 43 (expression -> NOT expression .)
    LTHAN           reduce using rule 43 (expression -> NOT expression .)
    LORE            reduce using rule 43 (expression -> NOT expression .)
    GTHAN           reduce using rule 43 (expression -> NOT expression .)
    GORE            reduce using rule 43 (expression -> NOT expression .)
    AND             reduce using rule 43 (expression -> NOT expression .)
    OR              reduce using rule 43 (expression -> NOT expression .)
    LCBRACKET       reduce using rule 43 (expression -> NOT expression .)
    SEMICOLON       reduce using rule 43 (expression -> NOT expression .)
    RPAREN          reduce using rule 43 (expression -> NOT expression .)
    COMMA           reduce using rule 43 (expression -> NOT expression .)
    DOT             shift and go to state 53

  ! DOT             [ reduce using rule 43 (expression -> NOT expression .) ]
  ! RAS             [ shift and go to state 39 ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! MODULE          [ shift and go to state 44 ]
  ! EQUALS          [ shift and go to state 45 ]
  ! NEQUALS         [ shift and go to state 46 ]
  ! LTHAN           [ shift and go to state 47 ]
  ! LORE            [ shift and go to state 48 ]
  ! GTHAN           [ shift and go to state 49 ]
  ! GORE            [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 57

    (44) expression -> LPAREN expression . RPAREN
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    RPAREN          shift and go to state 90
    RAS             shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    EQUALS          shift and go to state 45
    NEQUALS         shift and go to state 46
    LTHAN           shift and go to state 47
    LORE            shift and go to state 48
    GTHAN           shift and go to state 49
    GORE            shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    DOT             shift and go to state 53


state 58

    (25) function -> RFN ID LPAREN . RPAREN statement

    RPAREN          shift and go to state 91


state 59

    (17) declaration -> RLET RMUT ID COLON . primitive_type EQUAL expression
    (10) primitive_type -> . RINT
    (11) primitive_type -> . RFLOAT
    (12) primitive_type -> . RBOOL
    (13) primitive_type -> . RCHAR
    (14) primitive_type -> . AMPERSAND RSTR
    (15) primitive_type -> . RSTRING
    (16) primitive_type -> . RUSIZE

    RINT            shift and go to state 61
    RFLOAT          shift and go to state 62
    RBOOL           shift and go to state 63
    RCHAR           shift and go to state 64
    AMPERSAND       shift and go to state 65
    RSTRING         shift and go to state 66
    RUSIZE          shift and go to state 67

    primitive_type                 shift and go to state 92

state 60

    (18) declaration -> RLET ID COLON primitive_type . EQUAL expression

    EQUAL           shift and go to state 93


state 61

    (10) primitive_type -> RINT .

    EQUAL           reduce using rule 10 (primitive_type -> RINT .)
    RAS             reduce using rule 10 (primitive_type -> RINT .)
    PLUS            reduce using rule 10 (primitive_type -> RINT .)
    MINUS           reduce using rule 10 (primitive_type -> RINT .)
    TIMES           reduce using rule 10 (primitive_type -> RINT .)
    DIVIDE          reduce using rule 10 (primitive_type -> RINT .)
    MODULE          reduce using rule 10 (primitive_type -> RINT .)
    EQUALS          reduce using rule 10 (primitive_type -> RINT .)
    NEQUALS         reduce using rule 10 (primitive_type -> RINT .)
    LTHAN           reduce using rule 10 (primitive_type -> RINT .)
    LORE            reduce using rule 10 (primitive_type -> RINT .)
    GTHAN           reduce using rule 10 (primitive_type -> RINT .)
    GORE            reduce using rule 10 (primitive_type -> RINT .)
    AND             reduce using rule 10 (primitive_type -> RINT .)
    OR              reduce using rule 10 (primitive_type -> RINT .)
    DOT             reduce using rule 10 (primitive_type -> RINT .)
    LCBRACKET       reduce using rule 10 (primitive_type -> RINT .)
    SEMICOLON       reduce using rule 10 (primitive_type -> RINT .)
    RPAREN          reduce using rule 10 (primitive_type -> RINT .)
    COMMA           reduce using rule 10 (primitive_type -> RINT .)


state 62

    (11) primitive_type -> RFLOAT .

    EQUAL           reduce using rule 11 (primitive_type -> RFLOAT .)
    RAS             reduce using rule 11 (primitive_type -> RFLOAT .)
    PLUS            reduce using rule 11 (primitive_type -> RFLOAT .)
    MINUS           reduce using rule 11 (primitive_type -> RFLOAT .)
    TIMES           reduce using rule 11 (primitive_type -> RFLOAT .)
    DIVIDE          reduce using rule 11 (primitive_type -> RFLOAT .)
    MODULE          reduce using rule 11 (primitive_type -> RFLOAT .)
    EQUALS          reduce using rule 11 (primitive_type -> RFLOAT .)
    NEQUALS         reduce using rule 11 (primitive_type -> RFLOAT .)
    LTHAN           reduce using rule 11 (primitive_type -> RFLOAT .)
    LORE            reduce using rule 11 (primitive_type -> RFLOAT .)
    GTHAN           reduce using rule 11 (primitive_type -> RFLOAT .)
    GORE            reduce using rule 11 (primitive_type -> RFLOAT .)
    AND             reduce using rule 11 (primitive_type -> RFLOAT .)
    OR              reduce using rule 11 (primitive_type -> RFLOAT .)
    DOT             reduce using rule 11 (primitive_type -> RFLOAT .)
    LCBRACKET       reduce using rule 11 (primitive_type -> RFLOAT .)
    SEMICOLON       reduce using rule 11 (primitive_type -> RFLOAT .)
    RPAREN          reduce using rule 11 (primitive_type -> RFLOAT .)
    COMMA           reduce using rule 11 (primitive_type -> RFLOAT .)


state 63

    (12) primitive_type -> RBOOL .

    EQUAL           reduce using rule 12 (primitive_type -> RBOOL .)
    RAS             reduce using rule 12 (primitive_type -> RBOOL .)
    PLUS            reduce using rule 12 (primitive_type -> RBOOL .)
    MINUS           reduce using rule 12 (primitive_type -> RBOOL .)
    TIMES           reduce using rule 12 (primitive_type -> RBOOL .)
    DIVIDE          reduce using rule 12 (primitive_type -> RBOOL .)
    MODULE          reduce using rule 12 (primitive_type -> RBOOL .)
    EQUALS          reduce using rule 12 (primitive_type -> RBOOL .)
    NEQUALS         reduce using rule 12 (primitive_type -> RBOOL .)
    LTHAN           reduce using rule 12 (primitive_type -> RBOOL .)
    LORE            reduce using rule 12 (primitive_type -> RBOOL .)
    GTHAN           reduce using rule 12 (primitive_type -> RBOOL .)
    GORE            reduce using rule 12 (primitive_type -> RBOOL .)
    AND             reduce using rule 12 (primitive_type -> RBOOL .)
    OR              reduce using rule 12 (primitive_type -> RBOOL .)
    DOT             reduce using rule 12 (primitive_type -> RBOOL .)
    LCBRACKET       reduce using rule 12 (primitive_type -> RBOOL .)
    SEMICOLON       reduce using rule 12 (primitive_type -> RBOOL .)
    RPAREN          reduce using rule 12 (primitive_type -> RBOOL .)
    COMMA           reduce using rule 12 (primitive_type -> RBOOL .)


state 64

    (13) primitive_type -> RCHAR .

    EQUAL           reduce using rule 13 (primitive_type -> RCHAR .)
    RAS             reduce using rule 13 (primitive_type -> RCHAR .)
    PLUS            reduce using rule 13 (primitive_type -> RCHAR .)
    MINUS           reduce using rule 13 (primitive_type -> RCHAR .)
    TIMES           reduce using rule 13 (primitive_type -> RCHAR .)
    DIVIDE          reduce using rule 13 (primitive_type -> RCHAR .)
    MODULE          reduce using rule 13 (primitive_type -> RCHAR .)
    EQUALS          reduce using rule 13 (primitive_type -> RCHAR .)
    NEQUALS         reduce using rule 13 (primitive_type -> RCHAR .)
    LTHAN           reduce using rule 13 (primitive_type -> RCHAR .)
    LORE            reduce using rule 13 (primitive_type -> RCHAR .)
    GTHAN           reduce using rule 13 (primitive_type -> RCHAR .)
    GORE            reduce using rule 13 (primitive_type -> RCHAR .)
    AND             reduce using rule 13 (primitive_type -> RCHAR .)
    OR              reduce using rule 13 (primitive_type -> RCHAR .)
    DOT             reduce using rule 13 (primitive_type -> RCHAR .)
    LCBRACKET       reduce using rule 13 (primitive_type -> RCHAR .)
    SEMICOLON       reduce using rule 13 (primitive_type -> RCHAR .)
    RPAREN          reduce using rule 13 (primitive_type -> RCHAR .)
    COMMA           reduce using rule 13 (primitive_type -> RCHAR .)


state 65

    (14) primitive_type -> AMPERSAND . RSTR

    RSTR            shift and go to state 94


state 66

    (15) primitive_type -> RSTRING .

    EQUAL           reduce using rule 15 (primitive_type -> RSTRING .)
    RAS             reduce using rule 15 (primitive_type -> RSTRING .)
    PLUS            reduce using rule 15 (primitive_type -> RSTRING .)
    MINUS           reduce using rule 15 (primitive_type -> RSTRING .)
    TIMES           reduce using rule 15 (primitive_type -> RSTRING .)
    DIVIDE          reduce using rule 15 (primitive_type -> RSTRING .)
    MODULE          reduce using rule 15 (primitive_type -> RSTRING .)
    EQUALS          reduce using rule 15 (primitive_type -> RSTRING .)
    NEQUALS         reduce using rule 15 (primitive_type -> RSTRING .)
    LTHAN           reduce using rule 15 (primitive_type -> RSTRING .)
    LORE            reduce using rule 15 (primitive_type -> RSTRING .)
    GTHAN           reduce using rule 15 (primitive_type -> RSTRING .)
    GORE            reduce using rule 15 (primitive_type -> RSTRING .)
    AND             reduce using rule 15 (primitive_type -> RSTRING .)
    OR              reduce using rule 15 (primitive_type -> RSTRING .)
    DOT             reduce using rule 15 (primitive_type -> RSTRING .)
    LCBRACKET       reduce using rule 15 (primitive_type -> RSTRING .)
    SEMICOLON       reduce using rule 15 (primitive_type -> RSTRING .)
    RPAREN          reduce using rule 15 (primitive_type -> RSTRING .)
    COMMA           reduce using rule 15 (primitive_type -> RSTRING .)


state 67

    (16) primitive_type -> RUSIZE .

    EQUAL           reduce using rule 16 (primitive_type -> RUSIZE .)
    RAS             reduce using rule 16 (primitive_type -> RUSIZE .)
    PLUS            reduce using rule 16 (primitive_type -> RUSIZE .)
    MINUS           reduce using rule 16 (primitive_type -> RUSIZE .)
    TIMES           reduce using rule 16 (primitive_type -> RUSIZE .)
    DIVIDE          reduce using rule 16 (primitive_type -> RUSIZE .)
    MODULE          reduce using rule 16 (primitive_type -> RUSIZE .)
    EQUALS          reduce using rule 16 (primitive_type -> RUSIZE .)
    NEQUALS         reduce using rule 16 (primitive_type -> RUSIZE .)
    LTHAN           reduce using rule 16 (primitive_type -> RUSIZE .)
    LORE            reduce using rule 16 (primitive_type -> RUSIZE .)
    GTHAN           reduce using rule 16 (primitive_type -> RUSIZE .)
    GORE            reduce using rule 16 (primitive_type -> RUSIZE .)
    AND             reduce using rule 16 (primitive_type -> RUSIZE .)
    OR              reduce using rule 16 (primitive_type -> RUSIZE .)
    DOT             reduce using rule 16 (primitive_type -> RUSIZE .)
    LCBRACKET       reduce using rule 16 (primitive_type -> RUSIZE .)
    SEMICOLON       reduce using rule 16 (primitive_type -> RUSIZE .)
    RPAREN          reduce using rule 16 (primitive_type -> RUSIZE .)
    COMMA           reduce using rule 16 (primitive_type -> RUSIZE .)


state 68

    (20) println -> RPRINTLN NOT LPAREN expressions . RPAREN
    (26) expressions -> expressions . COMMA expression

    RPAREN          shift and go to state 95
    COMMA           shift and go to state 96


state 69

    (27) expressions -> expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    RPAREN          reduce using rule 27 (expressions -> expression .)
    COMMA           reduce using rule 27 (expressions -> expression .)
    RAS             shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    EQUALS          shift and go to state 45
    NEQUALS         shift and go to state 46
    LTHAN           shift and go to state 47
    LORE            shift and go to state 48
    GTHAN           shift and go to state 49
    GORE            shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    DOT             shift and go to state 53


state 70

    (21) if_st -> RIF expression statement else_st .

    RLET            reduce using rule 21 (if_st -> RIF expression statement else_st .)
    ID              reduce using rule 21 (if_st -> RIF expression statement else_st .)
    RPRINTLN        reduce using rule 21 (if_st -> RIF expression statement else_st .)
    RIF             reduce using rule 21 (if_st -> RIF expression statement else_st .)
    RFN             reduce using rule 21 (if_st -> RIF expression statement else_st .)
    $end            reduce using rule 21 (if_st -> RIF expression statement else_st .)
    RCBRACKET       reduce using rule 21 (if_st -> RIF expression statement else_st .)


state 71

    (22) else_st -> RELSE . statement
    (23) else_st -> RELSE . if_st
    (9) statement -> . LCBRACKET instructions RCBRACKET
    (21) if_st -> . RIF expression statement else_st

    LCBRACKET       shift and go to state 54
    RIF             shift and go to state 12

    statement                      shift and go to state 97
    if_st                          shift and go to state 98

state 72

    (24) else_st -> empty .

    RLET            reduce using rule 24 (else_st -> empty .)
    ID              reduce using rule 24 (else_st -> empty .)
    RPRINTLN        reduce using rule 24 (else_st -> empty .)
    RIF             reduce using rule 24 (else_st -> empty .)
    RFN             reduce using rule 24 (else_st -> empty .)
    $end            reduce using rule 24 (else_st -> empty .)
    RCBRACKET       reduce using rule 24 (else_st -> empty .)


state 73

    (28) expression -> expression RAS primitive_type .

    RAS             reduce using rule 28 (expression -> expression RAS primitive_type .)
    PLUS            reduce using rule 28 (expression -> expression RAS primitive_type .)
    MINUS           reduce using rule 28 (expression -> expression RAS primitive_type .)
    TIMES           reduce using rule 28 (expression -> expression RAS primitive_type .)
    DIVIDE          reduce using rule 28 (expression -> expression RAS primitive_type .)
    MODULE          reduce using rule 28 (expression -> expression RAS primitive_type .)
    EQUALS          reduce using rule 28 (expression -> expression RAS primitive_type .)
    NEQUALS         reduce using rule 28 (expression -> expression RAS primitive_type .)
    LTHAN           reduce using rule 28 (expression -> expression RAS primitive_type .)
    LORE            reduce using rule 28 (expression -> expression RAS primitive_type .)
    GTHAN           reduce using rule 28 (expression -> expression RAS primitive_type .)
    GORE            reduce using rule 28 (expression -> expression RAS primitive_type .)
    AND             reduce using rule 28 (expression -> expression RAS primitive_type .)
    OR              reduce using rule 28 (expression -> expression RAS primitive_type .)
    DOT             reduce using rule 28 (expression -> expression RAS primitive_type .)
    LCBRACKET       reduce using rule 28 (expression -> expression RAS primitive_type .)
    SEMICOLON       reduce using rule 28 (expression -> expression RAS primitive_type .)
    RPAREN          reduce using rule 28 (expression -> expression RAS primitive_type .)
    COMMA           reduce using rule 28 (expression -> expression RAS primitive_type .)


state 74

    (30) expression -> expression PLUS expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    PLUS            reduce using rule 30 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 30 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 30 (expression -> expression PLUS expression .)
    NEQUALS         reduce using rule 30 (expression -> expression PLUS expression .)
    LTHAN           reduce using rule 30 (expression -> expression PLUS expression .)
    LORE            reduce using rule 30 (expression -> expression PLUS expression .)
    GTHAN           reduce using rule 30 (expression -> expression PLUS expression .)
    GORE            reduce using rule 30 (expression -> expression PLUS expression .)
    AND             reduce using rule 30 (expression -> expression PLUS expression .)
    OR              reduce using rule 30 (expression -> expression PLUS expression .)
    LCBRACKET       reduce using rule 30 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 30 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 30 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 30 (expression -> expression PLUS expression .)
    RAS             shift and go to state 39
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    DOT             shift and go to state 53

  ! RAS             [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! TIMES           [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! MODULE          [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! DOT             [ reduce using rule 30 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! EQUALS          [ shift and go to state 45 ]
  ! NEQUALS         [ shift and go to state 46 ]
  ! LTHAN           [ shift and go to state 47 ]
  ! LORE            [ shift and go to state 48 ]
  ! GTHAN           [ shift and go to state 49 ]
  ! GORE            [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 75

    (31) expression -> expression MINUS expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    PLUS            reduce using rule 31 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 31 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 31 (expression -> expression MINUS expression .)
    NEQUALS         reduce using rule 31 (expression -> expression MINUS expression .)
    LTHAN           reduce using rule 31 (expression -> expression MINUS expression .)
    LORE            reduce using rule 31 (expression -> expression MINUS expression .)
    GTHAN           reduce using rule 31 (expression -> expression MINUS expression .)
    GORE            reduce using rule 31 (expression -> expression MINUS expression .)
    AND             reduce using rule 31 (expression -> expression MINUS expression .)
    OR              reduce using rule 31 (expression -> expression MINUS expression .)
    LCBRACKET       reduce using rule 31 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 31 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 31 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 31 (expression -> expression MINUS expression .)
    RAS             shift and go to state 39
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    DOT             shift and go to state 53

  ! RAS             [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! TIMES           [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! MODULE          [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! DOT             [ reduce using rule 31 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! EQUALS          [ shift and go to state 45 ]
  ! NEQUALS         [ shift and go to state 46 ]
  ! LTHAN           [ shift and go to state 47 ]
  ! LORE            [ shift and go to state 48 ]
  ! GTHAN           [ shift and go to state 49 ]
  ! GORE            [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 76

    (32) expression -> expression TIMES expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    PLUS            reduce using rule 32 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 32 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 32 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 32 (expression -> expression TIMES expression .)
    MODULE          reduce using rule 32 (expression -> expression TIMES expression .)
    EQUALS          reduce using rule 32 (expression -> expression TIMES expression .)
    NEQUALS         reduce using rule 32 (expression -> expression TIMES expression .)
    LTHAN           reduce using rule 32 (expression -> expression TIMES expression .)
    LORE            reduce using rule 32 (expression -> expression TIMES expression .)
    GTHAN           reduce using rule 32 (expression -> expression TIMES expression .)
    GORE            reduce using rule 32 (expression -> expression TIMES expression .)
    AND             reduce using rule 32 (expression -> expression TIMES expression .)
    OR              reduce using rule 32 (expression -> expression TIMES expression .)
    LCBRACKET       reduce using rule 32 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 32 (expression -> expression TIMES expression .)
    RPAREN          reduce using rule 32 (expression -> expression TIMES expression .)
    COMMA           reduce using rule 32 (expression -> expression TIMES expression .)
    RAS             shift and go to state 39
    DOT             shift and go to state 53

  ! RAS             [ reduce using rule 32 (expression -> expression TIMES expression .) ]
  ! DOT             [ reduce using rule 32 (expression -> expression TIMES expression .) ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! MODULE          [ shift and go to state 44 ]
  ! EQUALS          [ shift and go to state 45 ]
  ! NEQUALS         [ shift and go to state 46 ]
  ! LTHAN           [ shift and go to state 47 ]
  ! LORE            [ shift and go to state 48 ]
  ! GTHAN           [ shift and go to state 49 ]
  ! GORE            [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 77

    (33) expression -> expression DIVIDE expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    PLUS            reduce using rule 33 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 33 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 33 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 33 (expression -> expression DIVIDE expression .)
    MODULE          reduce using rule 33 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 33 (expression -> expression DIVIDE expression .)
    NEQUALS         reduce using rule 33 (expression -> expression DIVIDE expression .)
    LTHAN           reduce using rule 33 (expression -> expression DIVIDE expression .)
    LORE            reduce using rule 33 (expression -> expression DIVIDE expression .)
    GTHAN           reduce using rule 33 (expression -> expression DIVIDE expression .)
    GORE            reduce using rule 33 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 33 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 33 (expression -> expression DIVIDE expression .)
    LCBRACKET       reduce using rule 33 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 33 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 33 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 33 (expression -> expression DIVIDE expression .)
    RAS             shift and go to state 39
    DOT             shift and go to state 53

  ! RAS             [ reduce using rule 33 (expression -> expression DIVIDE expression .) ]
  ! DOT             [ reduce using rule 33 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! MODULE          [ shift and go to state 44 ]
  ! EQUALS          [ shift and go to state 45 ]
  ! NEQUALS         [ shift and go to state 46 ]
  ! LTHAN           [ shift and go to state 47 ]
  ! LORE            [ shift and go to state 48 ]
  ! GTHAN           [ shift and go to state 49 ]
  ! GORE            [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 78

    (34) expression -> expression MODULE expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    PLUS            reduce using rule 34 (expression -> expression MODULE expression .)
    MINUS           reduce using rule 34 (expression -> expression MODULE expression .)
    TIMES           reduce using rule 34 (expression -> expression MODULE expression .)
    DIVIDE          reduce using rule 34 (expression -> expression MODULE expression .)
    MODULE          reduce using rule 34 (expression -> expression MODULE expression .)
    EQUALS          reduce using rule 34 (expression -> expression MODULE expression .)
    NEQUALS         reduce using rule 34 (expression -> expression MODULE expression .)
    LTHAN           reduce using rule 34 (expression -> expression MODULE expression .)
    LORE            reduce using rule 34 (expression -> expression MODULE expression .)
    GTHAN           reduce using rule 34 (expression -> expression MODULE expression .)
    GORE            reduce using rule 34 (expression -> expression MODULE expression .)
    AND             reduce using rule 34 (expression -> expression MODULE expression .)
    OR              reduce using rule 34 (expression -> expression MODULE expression .)
    LCBRACKET       reduce using rule 34 (expression -> expression MODULE expression .)
    SEMICOLON       reduce using rule 34 (expression -> expression MODULE expression .)
    RPAREN          reduce using rule 34 (expression -> expression MODULE expression .)
    COMMA           reduce using rule 34 (expression -> expression MODULE expression .)
    RAS             shift and go to state 39
    DOT             shift and go to state 53

  ! RAS             [ reduce using rule 34 (expression -> expression MODULE expression .) ]
  ! DOT             [ reduce using rule 34 (expression -> expression MODULE expression .) ]
  ! PLUS            [ shift and go to state 40 ]
  ! MINUS           [ shift and go to state 41 ]
  ! TIMES           [ shift and go to state 42 ]
  ! DIVIDE          [ shift and go to state 43 ]
  ! MODULE          [ shift and go to state 44 ]
  ! EQUALS          [ shift and go to state 45 ]
  ! NEQUALS         [ shift and go to state 46 ]
  ! LTHAN           [ shift and go to state 47 ]
  ! LORE            [ shift and go to state 48 ]
  ! GTHAN           [ shift and go to state 49 ]
  ! GORE            [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 79

    (35) expression -> expression EQUALS expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    EQUALS          reduce using rule 35 (expression -> expression EQUALS expression .)
    NEQUALS         reduce using rule 35 (expression -> expression EQUALS expression .)
    AND             reduce using rule 35 (expression -> expression EQUALS expression .)
    OR              reduce using rule 35 (expression -> expression EQUALS expression .)
    LCBRACKET       reduce using rule 35 (expression -> expression EQUALS expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression EQUALS expression .)
    RPAREN          reduce using rule 35 (expression -> expression EQUALS expression .)
    COMMA           reduce using rule 35 (expression -> expression EQUALS expression .)
    RAS             shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    LTHAN           shift and go to state 47
    LORE            shift and go to state 48
    GTHAN           shift and go to state 49
    GORE            shift and go to state 50
    DOT             shift and go to state 53

  ! RAS             [ reduce using rule 35 (expression -> expression EQUALS expression .) ]
  ! PLUS            [ reduce using rule 35 (expression -> expression EQUALS expression .) ]
  ! MINUS           [ reduce using rule 35 (expression -> expression EQUALS expression .) ]
  ! TIMES           [ reduce using rule 35 (expression -> expression EQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 35 (expression -> expression EQUALS expression .) ]
  ! MODULE          [ reduce using rule 35 (expression -> expression EQUALS expression .) ]
  ! LTHAN           [ reduce using rule 35 (expression -> expression EQUALS expression .) ]
  ! LORE            [ reduce using rule 35 (expression -> expression EQUALS expression .) ]
  ! GTHAN           [ reduce using rule 35 (expression -> expression EQUALS expression .) ]
  ! GORE            [ reduce using rule 35 (expression -> expression EQUALS expression .) ]
  ! DOT             [ reduce using rule 35 (expression -> expression EQUALS expression .) ]
  ! EQUALS          [ shift and go to state 45 ]
  ! NEQUALS         [ shift and go to state 46 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 80

    (36) expression -> expression NEQUALS expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    EQUALS          reduce using rule 36 (expression -> expression NEQUALS expression .)
    NEQUALS         reduce using rule 36 (expression -> expression NEQUALS expression .)
    AND             reduce using rule 36 (expression -> expression NEQUALS expression .)
    OR              reduce using rule 36 (expression -> expression NEQUALS expression .)
    LCBRACKET       reduce using rule 36 (expression -> expression NEQUALS expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression NEQUALS expression .)
    RPAREN          reduce using rule 36 (expression -> expression NEQUALS expression .)
    COMMA           reduce using rule 36 (expression -> expression NEQUALS expression .)
    RAS             shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    LTHAN           shift and go to state 47
    LORE            shift and go to state 48
    GTHAN           shift and go to state 49
    GORE            shift and go to state 50
    DOT             shift and go to state 53

  ! RAS             [ reduce using rule 36 (expression -> expression NEQUALS expression .) ]
  ! PLUS            [ reduce using rule 36 (expression -> expression NEQUALS expression .) ]
  ! MINUS           [ reduce using rule 36 (expression -> expression NEQUALS expression .) ]
  ! TIMES           [ reduce using rule 36 (expression -> expression NEQUALS expression .) ]
  ! DIVIDE          [ reduce using rule 36 (expression -> expression NEQUALS expression .) ]
  ! MODULE          [ reduce using rule 36 (expression -> expression NEQUALS expression .) ]
  ! LTHAN           [ reduce using rule 36 (expression -> expression NEQUALS expression .) ]
  ! LORE            [ reduce using rule 36 (expression -> expression NEQUALS expression .) ]
  ! GTHAN           [ reduce using rule 36 (expression -> expression NEQUALS expression .) ]
  ! GORE            [ reduce using rule 36 (expression -> expression NEQUALS expression .) ]
  ! DOT             [ reduce using rule 36 (expression -> expression NEQUALS expression .) ]
  ! EQUALS          [ shift and go to state 45 ]
  ! NEQUALS         [ shift and go to state 46 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 81

    (37) expression -> expression LTHAN expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    EQUALS          reduce using rule 37 (expression -> expression LTHAN expression .)
    NEQUALS         reduce using rule 37 (expression -> expression LTHAN expression .)
    LTHAN           reduce using rule 37 (expression -> expression LTHAN expression .)
    LORE            reduce using rule 37 (expression -> expression LTHAN expression .)
    GTHAN           reduce using rule 37 (expression -> expression LTHAN expression .)
    GORE            reduce using rule 37 (expression -> expression LTHAN expression .)
    AND             reduce using rule 37 (expression -> expression LTHAN expression .)
    OR              reduce using rule 37 (expression -> expression LTHAN expression .)
    LCBRACKET       reduce using rule 37 (expression -> expression LTHAN expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression LTHAN expression .)
    RPAREN          reduce using rule 37 (expression -> expression LTHAN expression .)
    COMMA           reduce using rule 37 (expression -> expression LTHAN expression .)
    RAS             shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    DOT             shift and go to state 53

  ! RAS             [ reduce using rule 37 (expression -> expression LTHAN expression .) ]
  ! PLUS            [ reduce using rule 37 (expression -> expression LTHAN expression .) ]
  ! MINUS           [ reduce using rule 37 (expression -> expression LTHAN expression .) ]
  ! TIMES           [ reduce using rule 37 (expression -> expression LTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 37 (expression -> expression LTHAN expression .) ]
  ! MODULE          [ reduce using rule 37 (expression -> expression LTHAN expression .) ]
  ! DOT             [ reduce using rule 37 (expression -> expression LTHAN expression .) ]
  ! EQUALS          [ shift and go to state 45 ]
  ! NEQUALS         [ shift and go to state 46 ]
  ! LTHAN           [ shift and go to state 47 ]
  ! LORE            [ shift and go to state 48 ]
  ! GTHAN           [ shift and go to state 49 ]
  ! GORE            [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 82

    (38) expression -> expression LORE expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    EQUALS          reduce using rule 38 (expression -> expression LORE expression .)
    NEQUALS         reduce using rule 38 (expression -> expression LORE expression .)
    LTHAN           reduce using rule 38 (expression -> expression LORE expression .)
    LORE            reduce using rule 38 (expression -> expression LORE expression .)
    GTHAN           reduce using rule 38 (expression -> expression LORE expression .)
    GORE            reduce using rule 38 (expression -> expression LORE expression .)
    AND             reduce using rule 38 (expression -> expression LORE expression .)
    OR              reduce using rule 38 (expression -> expression LORE expression .)
    LCBRACKET       reduce using rule 38 (expression -> expression LORE expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression LORE expression .)
    RPAREN          reduce using rule 38 (expression -> expression LORE expression .)
    COMMA           reduce using rule 38 (expression -> expression LORE expression .)
    RAS             shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    DOT             shift and go to state 53

  ! RAS             [ reduce using rule 38 (expression -> expression LORE expression .) ]
  ! PLUS            [ reduce using rule 38 (expression -> expression LORE expression .) ]
  ! MINUS           [ reduce using rule 38 (expression -> expression LORE expression .) ]
  ! TIMES           [ reduce using rule 38 (expression -> expression LORE expression .) ]
  ! DIVIDE          [ reduce using rule 38 (expression -> expression LORE expression .) ]
  ! MODULE          [ reduce using rule 38 (expression -> expression LORE expression .) ]
  ! DOT             [ reduce using rule 38 (expression -> expression LORE expression .) ]
  ! EQUALS          [ shift and go to state 45 ]
  ! NEQUALS         [ shift and go to state 46 ]
  ! LTHAN           [ shift and go to state 47 ]
  ! LORE            [ shift and go to state 48 ]
  ! GTHAN           [ shift and go to state 49 ]
  ! GORE            [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 83

    (39) expression -> expression GTHAN expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    EQUALS          reduce using rule 39 (expression -> expression GTHAN expression .)
    NEQUALS         reduce using rule 39 (expression -> expression GTHAN expression .)
    LTHAN           reduce using rule 39 (expression -> expression GTHAN expression .)
    LORE            reduce using rule 39 (expression -> expression GTHAN expression .)
    GTHAN           reduce using rule 39 (expression -> expression GTHAN expression .)
    GORE            reduce using rule 39 (expression -> expression GTHAN expression .)
    AND             reduce using rule 39 (expression -> expression GTHAN expression .)
    OR              reduce using rule 39 (expression -> expression GTHAN expression .)
    LCBRACKET       reduce using rule 39 (expression -> expression GTHAN expression .)
    SEMICOLON       reduce using rule 39 (expression -> expression GTHAN expression .)
    RPAREN          reduce using rule 39 (expression -> expression GTHAN expression .)
    COMMA           reduce using rule 39 (expression -> expression GTHAN expression .)
    RAS             shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    DOT             shift and go to state 53

  ! RAS             [ reduce using rule 39 (expression -> expression GTHAN expression .) ]
  ! PLUS            [ reduce using rule 39 (expression -> expression GTHAN expression .) ]
  ! MINUS           [ reduce using rule 39 (expression -> expression GTHAN expression .) ]
  ! TIMES           [ reduce using rule 39 (expression -> expression GTHAN expression .) ]
  ! DIVIDE          [ reduce using rule 39 (expression -> expression GTHAN expression .) ]
  ! MODULE          [ reduce using rule 39 (expression -> expression GTHAN expression .) ]
  ! DOT             [ reduce using rule 39 (expression -> expression GTHAN expression .) ]
  ! EQUALS          [ shift and go to state 45 ]
  ! NEQUALS         [ shift and go to state 46 ]
  ! LTHAN           [ shift and go to state 47 ]
  ! LORE            [ shift and go to state 48 ]
  ! GTHAN           [ shift and go to state 49 ]
  ! GORE            [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 84

    (40) expression -> expression GORE expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    EQUALS          reduce using rule 40 (expression -> expression GORE expression .)
    NEQUALS         reduce using rule 40 (expression -> expression GORE expression .)
    LTHAN           reduce using rule 40 (expression -> expression GORE expression .)
    LORE            reduce using rule 40 (expression -> expression GORE expression .)
    GTHAN           reduce using rule 40 (expression -> expression GORE expression .)
    GORE            reduce using rule 40 (expression -> expression GORE expression .)
    AND             reduce using rule 40 (expression -> expression GORE expression .)
    OR              reduce using rule 40 (expression -> expression GORE expression .)
    LCBRACKET       reduce using rule 40 (expression -> expression GORE expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression GORE expression .)
    RPAREN          reduce using rule 40 (expression -> expression GORE expression .)
    COMMA           reduce using rule 40 (expression -> expression GORE expression .)
    RAS             shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    DOT             shift and go to state 53

  ! RAS             [ reduce using rule 40 (expression -> expression GORE expression .) ]
  ! PLUS            [ reduce using rule 40 (expression -> expression GORE expression .) ]
  ! MINUS           [ reduce using rule 40 (expression -> expression GORE expression .) ]
  ! TIMES           [ reduce using rule 40 (expression -> expression GORE expression .) ]
  ! DIVIDE          [ reduce using rule 40 (expression -> expression GORE expression .) ]
  ! MODULE          [ reduce using rule 40 (expression -> expression GORE expression .) ]
  ! DOT             [ reduce using rule 40 (expression -> expression GORE expression .) ]
  ! EQUALS          [ shift and go to state 45 ]
  ! NEQUALS         [ shift and go to state 46 ]
  ! LTHAN           [ shift and go to state 47 ]
  ! LORE            [ shift and go to state 48 ]
  ! GTHAN           [ shift and go to state 49 ]
  ! GORE            [ shift and go to state 50 ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 85

    (41) expression -> expression AND expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    AND             reduce using rule 41 (expression -> expression AND expression .)
    OR              reduce using rule 41 (expression -> expression AND expression .)
    LCBRACKET       reduce using rule 41 (expression -> expression AND expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression AND expression .)
    RPAREN          reduce using rule 41 (expression -> expression AND expression .)
    COMMA           reduce using rule 41 (expression -> expression AND expression .)
    RAS             shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    EQUALS          shift and go to state 45
    NEQUALS         shift and go to state 46
    LTHAN           shift and go to state 47
    LORE            shift and go to state 48
    GTHAN           shift and go to state 49
    GORE            shift and go to state 50
    DOT             shift and go to state 53

  ! RAS             [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! PLUS            [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! TIMES           [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! MODULE          [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! EQUALS          [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! NEQUALS         [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! LTHAN           [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! LORE            [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! GTHAN           [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! GORE            [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! DOT             [ reduce using rule 41 (expression -> expression AND expression .) ]
  ! AND             [ shift and go to state 51 ]
  ! OR              [ shift and go to state 52 ]


state 86

    (42) expression -> expression OR expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    OR              reduce using rule 42 (expression -> expression OR expression .)
    LCBRACKET       reduce using rule 42 (expression -> expression OR expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression OR expression .)
    RPAREN          reduce using rule 42 (expression -> expression OR expression .)
    COMMA           reduce using rule 42 (expression -> expression OR expression .)
    RAS             shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    EQUALS          shift and go to state 45
    NEQUALS         shift and go to state 46
    LTHAN           shift and go to state 47
    LORE            shift and go to state 48
    GTHAN           shift and go to state 49
    GORE            shift and go to state 50
    AND             shift and go to state 51
    DOT             shift and go to state 53

  ! RAS             [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! PLUS            [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! TIMES           [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! MODULE          [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! EQUALS          [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! NEQUALS         [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! LTHAN           [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! LORE            [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! GTHAN           [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! GORE            [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! DOT             [ reduce using rule 42 (expression -> expression OR expression .) ]
  ! OR              [ shift and go to state 52 ]


state 87

    (45) expression -> expression DOT RTOSTRING . LPAREN RPAREN

    LPAREN          shift and go to state 99


state 88

    (46) expression -> expression DOT RTOOWNED . LPAREN RPAREN

    LPAREN          shift and go to state 100


state 89

    (9) statement -> LCBRACKET instructions . RCBRACKET
    (2) instructions -> instructions . instruction
    (4) instruction -> . declaration SEMICOLON
    (5) instruction -> . asignation SEMICOLON
    (6) instruction -> . println SEMICOLON
    (7) instruction -> . if_st
    (8) instruction -> . function
    (17) declaration -> . RLET RMUT ID COLON primitive_type EQUAL expression
    (18) declaration -> . RLET ID COLON primitive_type EQUAL expression
    (19) asignation -> . ID EQUAL expression
    (20) println -> . RPRINTLN NOT LPAREN expressions RPAREN
    (21) if_st -> . RIF expression statement else_st
    (25) function -> . RFN ID LPAREN RPAREN statement

    RCBRACKET       shift and go to state 101
    RLET            shift and go to state 9
    ID              shift and go to state 10
    RPRINTLN        shift and go to state 11
    RIF             shift and go to state 12
    RFN             shift and go to state 13

    instruction                    shift and go to state 14
    declaration                    shift and go to state 4
    asignation                     shift and go to state 5
    println                        shift and go to state 6
    if_st                          shift and go to state 7
    function                       shift and go to state 8

state 90

    (44) expression -> LPAREN expression RPAREN .

    RAS             reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    TIMES           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    MODULE          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    NEQUALS         reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LTHAN           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LORE            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    GTHAN           reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    GORE            reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    DOT             reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    LCBRACKET       reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 44 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 44 (expression -> LPAREN expression RPAREN .)


state 91

    (25) function -> RFN ID LPAREN RPAREN . statement
    (9) statement -> . LCBRACKET instructions RCBRACKET

    LCBRACKET       shift and go to state 54

    statement                      shift and go to state 102

state 92

    (17) declaration -> RLET RMUT ID COLON primitive_type . EQUAL expression

    EQUAL           shift and go to state 103


state 93

    (18) declaration -> RLET ID COLON primitive_type EQUAL . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 104

state 94

    (14) primitive_type -> AMPERSAND RSTR .

    EQUAL           reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    RAS             reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    PLUS            reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    MINUS           reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    TIMES           reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    DIVIDE          reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    MODULE          reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    EQUALS          reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    NEQUALS         reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    LTHAN           reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    LORE            reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    GTHAN           reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    GORE            reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    AND             reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    OR              reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    DOT             reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    LCBRACKET       reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    SEMICOLON       reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    RPAREN          reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)
    COMMA           reduce using rule 14 (primitive_type -> AMPERSAND RSTR .)


state 95

    (20) println -> RPRINTLN NOT LPAREN expressions RPAREN .

    SEMICOLON       reduce using rule 20 (println -> RPRINTLN NOT LPAREN expressions RPAREN .)


state 96

    (26) expressions -> expressions COMMA . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 105

state 97

    (22) else_st -> RELSE statement .

    RLET            reduce using rule 22 (else_st -> RELSE statement .)
    ID              reduce using rule 22 (else_st -> RELSE statement .)
    RPRINTLN        reduce using rule 22 (else_st -> RELSE statement .)
    RIF             reduce using rule 22 (else_st -> RELSE statement .)
    RFN             reduce using rule 22 (else_st -> RELSE statement .)
    $end            reduce using rule 22 (else_st -> RELSE statement .)
    RCBRACKET       reduce using rule 22 (else_st -> RELSE statement .)


state 98

    (23) else_st -> RELSE if_st .

    RLET            reduce using rule 23 (else_st -> RELSE if_st .)
    ID              reduce using rule 23 (else_st -> RELSE if_st .)
    RPRINTLN        reduce using rule 23 (else_st -> RELSE if_st .)
    RIF             reduce using rule 23 (else_st -> RELSE if_st .)
    RFN             reduce using rule 23 (else_st -> RELSE if_st .)
    $end            reduce using rule 23 (else_st -> RELSE if_st .)
    RCBRACKET       reduce using rule 23 (else_st -> RELSE if_st .)


state 99

    (45) expression -> expression DOT RTOSTRING LPAREN . RPAREN

    RPAREN          shift and go to state 106


state 100

    (46) expression -> expression DOT RTOOWNED LPAREN . RPAREN

    RPAREN          shift and go to state 107


state 101

    (9) statement -> LCBRACKET instructions RCBRACKET .

    RELSE           reduce using rule 9 (statement -> LCBRACKET instructions RCBRACKET .)
    RLET            reduce using rule 9 (statement -> LCBRACKET instructions RCBRACKET .)
    ID              reduce using rule 9 (statement -> LCBRACKET instructions RCBRACKET .)
    RPRINTLN        reduce using rule 9 (statement -> LCBRACKET instructions RCBRACKET .)
    RIF             reduce using rule 9 (statement -> LCBRACKET instructions RCBRACKET .)
    RFN             reduce using rule 9 (statement -> LCBRACKET instructions RCBRACKET .)
    $end            reduce using rule 9 (statement -> LCBRACKET instructions RCBRACKET .)
    RCBRACKET       reduce using rule 9 (statement -> LCBRACKET instructions RCBRACKET .)


state 102

    (25) function -> RFN ID LPAREN RPAREN statement .

    RLET            reduce using rule 25 (function -> RFN ID LPAREN RPAREN statement .)
    ID              reduce using rule 25 (function -> RFN ID LPAREN RPAREN statement .)
    RPRINTLN        reduce using rule 25 (function -> RFN ID LPAREN RPAREN statement .)
    RIF             reduce using rule 25 (function -> RFN ID LPAREN RPAREN statement .)
    RFN             reduce using rule 25 (function -> RFN ID LPAREN RPAREN statement .)
    $end            reduce using rule 25 (function -> RFN ID LPAREN RPAREN statement .)
    RCBRACKET       reduce using rule 25 (function -> RFN ID LPAREN RPAREN statement .)


state 103

    (17) declaration -> RLET RMUT ID COLON primitive_type EQUAL . expression
    (28) expression -> . expression RAS primitive_type
    (29) expression -> . MINUS expression
    (30) expression -> . expression PLUS expression
    (31) expression -> . expression MINUS expression
    (32) expression -> . expression TIMES expression
    (33) expression -> . expression DIVIDE expression
    (34) expression -> . expression MODULE expression
    (35) expression -> . expression EQUALS expression
    (36) expression -> . expression NEQUALS expression
    (37) expression -> . expression LTHAN expression
    (38) expression -> . expression LORE expression
    (39) expression -> . expression GTHAN expression
    (40) expression -> . expression GORE expression
    (41) expression -> . expression AND expression
    (42) expression -> . expression OR expression
    (43) expression -> . NOT expression
    (44) expression -> . LPAREN expression RPAREN
    (45) expression -> . expression DOT RTOSTRING LPAREN RPAREN
    (46) expression -> . expression DOT RTOOWNED LPAREN RPAREN
    (47) expression -> . INT
    (48) expression -> . FLOAT
    (49) expression -> . STRING
    (50) expression -> . CHAR
    (51) expression -> . RTRUE
    (52) expression -> . RFALSE
    (53) expression -> . ID

    MINUS           shift and go to state 23
    NOT             shift and go to state 24
    LPAREN          shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    STRING          shift and go to state 28
    CHAR            shift and go to state 29
    RTRUE           shift and go to state 30
    RFALSE          shift and go to state 31
    ID              shift and go to state 32

    expression                     shift and go to state 108

state 104

    (18) declaration -> RLET ID COLON primitive_type EQUAL expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    SEMICOLON       reduce using rule 18 (declaration -> RLET ID COLON primitive_type EQUAL expression .)
    RAS             shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    EQUALS          shift and go to state 45
    NEQUALS         shift and go to state 46
    LTHAN           shift and go to state 47
    LORE            shift and go to state 48
    GTHAN           shift and go to state 49
    GORE            shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    DOT             shift and go to state 53


state 105

    (26) expressions -> expressions COMMA expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    RPAREN          reduce using rule 26 (expressions -> expressions COMMA expression .)
    COMMA           reduce using rule 26 (expressions -> expressions COMMA expression .)
    RAS             shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    EQUALS          shift and go to state 45
    NEQUALS         shift and go to state 46
    LTHAN           shift and go to state 47
    LORE            shift and go to state 48
    GTHAN           shift and go to state 49
    GORE            shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    DOT             shift and go to state 53


state 106

    (45) expression -> expression DOT RTOSTRING LPAREN RPAREN .

    RAS             reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    PLUS            reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    MINUS           reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    TIMES           reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    DIVIDE          reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    MODULE          reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    EQUALS          reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    NEQUALS         reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    LTHAN           reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    LORE            reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    GTHAN           reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    GORE            reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    AND             reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    OR              reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    DOT             reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    LCBRACKET       reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    SEMICOLON       reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    RPAREN          reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)
    COMMA           reduce using rule 45 (expression -> expression DOT RTOSTRING LPAREN RPAREN .)


state 107

    (46) expression -> expression DOT RTOOWNED LPAREN RPAREN .

    RAS             reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    PLUS            reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    MINUS           reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    TIMES           reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    DIVIDE          reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    MODULE          reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    EQUALS          reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    NEQUALS         reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    LTHAN           reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    LORE            reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    GTHAN           reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    GORE            reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    AND             reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    OR              reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    DOT             reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    LCBRACKET       reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    SEMICOLON       reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    RPAREN          reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)
    COMMA           reduce using rule 46 (expression -> expression DOT RTOOWNED LPAREN RPAREN .)


state 108

    (17) declaration -> RLET RMUT ID COLON primitive_type EQUAL expression .
    (28) expression -> expression . RAS primitive_type
    (30) expression -> expression . PLUS expression
    (31) expression -> expression . MINUS expression
    (32) expression -> expression . TIMES expression
    (33) expression -> expression . DIVIDE expression
    (34) expression -> expression . MODULE expression
    (35) expression -> expression . EQUALS expression
    (36) expression -> expression . NEQUALS expression
    (37) expression -> expression . LTHAN expression
    (38) expression -> expression . LORE expression
    (39) expression -> expression . GTHAN expression
    (40) expression -> expression . GORE expression
    (41) expression -> expression . AND expression
    (42) expression -> expression . OR expression
    (45) expression -> expression . DOT RTOSTRING LPAREN RPAREN
    (46) expression -> expression . DOT RTOOWNED LPAREN RPAREN

    SEMICOLON       reduce using rule 17 (declaration -> RLET RMUT ID COLON primitive_type EQUAL expression .)
    RAS             shift and go to state 39
    PLUS            shift and go to state 40
    MINUS           shift and go to state 41
    TIMES           shift and go to state 42
    DIVIDE          shift and go to state 43
    MODULE          shift and go to state 44
    EQUALS          shift and go to state 45
    NEQUALS         shift and go to state 46
    LTHAN           shift and go to state 47
    LORE            shift and go to state 48
    GTHAN           shift and go to state 49
    GORE            shift and go to state 50
    AND             shift and go to state 51
    OR              shift and go to state 52
    DOT             shift and go to state 53

