
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDleftEQUALSNEQUALSleftLTHANGTHANLOREGOREleftPLUSMINUSleftTIMESDIVIDEMODULEleftRASrightUMINUSNOTleftDOTPARENSAMPERSAND AND CHAR COLON COMMA DIVIDE DOT EQUAL EQUALS FLOAT GORE GTHAN ID INT LCBRACKET LORE LPAREN LTHAN MINUS MODULE NEQUALS NOT OR PLUS RAS RBOOL RCBRACKET RCHAR RELSE RFALSE RFLOAT RFN RIF RINT RLET RMUT RPAREN RPRINTLN RSTR RSTRING RTOOWNED RTOSTRING RTRUE RUSIZE SEMICOLON STRING TIMESinit : instructionsinstructions : instructions instructioninstructions : instructioninstruction : declaration SEMICOLON\n    | asignation SEMICOLON\n    | println SEMICOLON\n    | if_st\n    | functionstatement : LCBRACKET instructions RCBRACKETprimitive_type : RINT\n    | RFLOAT\n    | RBOOL\n    | RCHAR\n    | AMPERSAND RSTR\n    | RSTRING\n    | RUSIZEdeclaration : RLET RMUT ID COLON primitive_type EQUAL expressiondeclaration : RLET ID COLON primitive_type EQUAL expressionasignation : ID EQUAL expressionprintln : RPRINTLN NOT LPAREN expressions RPARENif_st : RIF expression statement else_stelse_st : RELSE statement\n    | RELSE if_st\n    | emptyfunction : RFN ID LPAREN RPAREN statementexpressions :  expressions COMMA expressionexpressions : expressionexpression : expression RAS primitive_typeexpression : MINUS expression %prec UMINUSexpression : expression PLUS expression\n    | expression MINUS expression\n    | expression TIMES expression\n    | expression DIVIDE expression\n    | expression MODULE expressionexpression : expression EQUALS expression\n    | expression NEQUALS expression\n    | expression LTHAN expression\n    | expression LORE expression\n    | expression GTHAN expression\n    | expression GORE expressionexpression : expression AND expression\n    | expression OR expression\n    | NOT expressionexpression : LPAREN expression RPAREN %prec PARENSexpression : expression DOT RTOSTRING LPAREN RPAREN\n    | expression DOT RTOOWNED LPAREN RPARENexpression : INT\n    | FLOAT\n    | STRING\n    | CHARexpression : RTRUEexpression : RFALSEexpression : IDempty :'
    
_lr_action_items = {'RLET':([0,2,3,7,8,14,15,16,17,38,54,70,72,89,97,98,101,102,],[9,9,-3,-7,-8,-2,-4,-5,-6,-54,9,-21,-24,9,-22,-23,-9,-25,]),'ID':([0,2,3,7,8,9,12,13,14,15,16,17,18,20,23,24,25,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,54,70,72,89,93,96,97,98,101,102,103,],[10,10,-3,-7,-8,19,32,33,-2,-4,-5,-6,34,32,32,32,32,32,-54,32,32,32,32,32,32,32,32,32,32,32,32,32,10,-21,-24,10,32,32,-22,-23,-9,-25,32,]),'RPRINTLN':([0,2,3,7,8,14,15,16,17,38,54,70,72,89,97,98,101,102,],[11,11,-3,-7,-8,-2,-4,-5,-6,-54,11,-21,-24,11,-22,-23,-9,-25,]),'RIF':([0,2,3,7,8,14,15,16,17,38,54,70,71,72,89,97,98,101,102,],[12,12,-3,-7,-8,-2,-4,-5,-6,-54,12,-21,12,-24,12,-22,-23,-9,-25,]),'RFN':([0,2,3,7,8,14,15,16,17,38,54,70,72,89,97,98,101,102,],[13,13,-3,-7,-8,-2,-4,-5,-6,-54,13,-21,-24,13,-22,-23,-9,-25,]),'$end':([1,2,3,7,8,14,15,16,17,38,70,72,97,98,101,102,],[0,-1,-3,-7,-8,-2,-4,-5,-6,-54,-21,-24,-22,-23,-9,-25,]),'RCBRACKET':([3,7,8,14,15,16,17,38,70,72,89,97,98,101,102,],[-3,-7,-8,-2,-4,-5,-6,-54,-21,-24,101,-22,-23,-9,-25,]),'SEMICOLON':([4,5,6,26,27,28,29,30,31,32,36,55,56,61,62,63,64,66,67,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,95,104,106,107,108,],[15,16,17,-47,-48,-49,-50,-51,-52,-53,-19,-29,-43,-10,-11,-12,-13,-15,-16,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-14,-20,-18,-45,-46,-17,]),'RMUT':([9,],[18,]),'EQUAL':([10,60,61,62,63,64,66,67,92,94,],[20,93,-10,-11,-12,-13,-15,-16,103,-14,]),'NOT':([11,12,20,23,24,25,37,40,41,42,43,44,45,46,47,48,49,50,51,52,93,96,103,],[21,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'MINUS':([12,20,22,23,24,25,26,27,28,29,30,31,32,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,55,56,57,61,62,63,64,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,93,94,96,103,104,105,106,107,108,],[23,23,41,23,23,23,-47,-48,-49,-50,-51,-52,-53,41,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-29,-43,41,-10,-11,-12,-13,-15,-16,41,-28,-30,-31,-32,-33,-34,41,41,41,41,41,41,41,41,-44,23,-14,23,23,41,41,-45,-46,41,]),'LPAREN':([12,20,21,23,24,25,33,37,40,41,42,43,44,45,46,47,48,49,50,51,52,87,88,93,96,103,],[25,25,37,25,25,25,58,25,25,25,25,25,25,25,25,25,25,25,25,25,25,99,100,25,25,25,]),'INT':([12,20,23,24,25,37,40,41,42,43,44,45,46,47,48,49,50,51,52,93,96,103,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'FLOAT':([12,20,23,24,25,37,40,41,42,43,44,45,46,47,48,49,50,51,52,93,96,103,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'STRING':([12,20,23,24,25,37,40,41,42,43,44,45,46,47,48,49,50,51,52,93,96,103,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'CHAR':([12,20,23,24,25,37,40,41,42,43,44,45,46,47,48,49,50,51,52,93,96,103,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'RTRUE':([12,20,23,24,25,37,40,41,42,43,44,45,46,47,48,49,50,51,52,93,96,103,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'RFALSE':([12,20,23,24,25,37,40,41,42,43,44,45,46,47,48,49,50,51,52,93,96,103,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'COLON':([19,34,],[35,59,]),'RAS':([22,26,27,28,29,30,31,32,36,55,56,57,61,62,63,64,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,104,105,106,107,108,],[39,-47,-48,-49,-50,-51,-52,-53,39,-29,-43,39,-10,-11,-12,-13,-15,-16,39,-28,39,39,39,39,39,39,39,39,39,39,39,39,39,-44,-14,39,39,-45,-46,39,]),'PLUS':([22,26,27,28,29,30,31,32,36,55,56,57,61,62,63,64,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,104,105,106,107,108,],[40,-47,-48,-49,-50,-51,-52,-53,40,-29,-43,40,-10,-11,-12,-13,-15,-16,40,-28,-30,-31,-32,-33,-34,40,40,40,40,40,40,40,40,-44,-14,40,40,-45,-46,40,]),'TIMES':([22,26,27,28,29,30,31,32,36,55,56,57,61,62,63,64,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,104,105,106,107,108,],[42,-47,-48,-49,-50,-51,-52,-53,42,-29,-43,42,-10,-11,-12,-13,-15,-16,42,-28,42,42,-32,-33,-34,42,42,42,42,42,42,42,42,-44,-14,42,42,-45,-46,42,]),'DIVIDE':([22,26,27,28,29,30,31,32,36,55,56,57,61,62,63,64,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,104,105,106,107,108,],[43,-47,-48,-49,-50,-51,-52,-53,43,-29,-43,43,-10,-11,-12,-13,-15,-16,43,-28,43,43,-32,-33,-34,43,43,43,43,43,43,43,43,-44,-14,43,43,-45,-46,43,]),'MODULE':([22,26,27,28,29,30,31,32,36,55,56,57,61,62,63,64,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,104,105,106,107,108,],[44,-47,-48,-49,-50,-51,-52,-53,44,-29,-43,44,-10,-11,-12,-13,-15,-16,44,-28,44,44,-32,-33,-34,44,44,44,44,44,44,44,44,-44,-14,44,44,-45,-46,44,]),'EQUALS':([22,26,27,28,29,30,31,32,36,55,56,57,61,62,63,64,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,104,105,106,107,108,],[45,-47,-48,-49,-50,-51,-52,-53,45,-29,-43,45,-10,-11,-12,-13,-15,-16,45,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,45,45,-44,-14,45,45,-45,-46,45,]),'NEQUALS':([22,26,27,28,29,30,31,32,36,55,56,57,61,62,63,64,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,104,105,106,107,108,],[46,-47,-48,-49,-50,-51,-52,-53,46,-29,-43,46,-10,-11,-12,-13,-15,-16,46,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,46,46,-44,-14,46,46,-45,-46,46,]),'LTHAN':([22,26,27,28,29,30,31,32,36,55,56,57,61,62,63,64,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,104,105,106,107,108,],[47,-47,-48,-49,-50,-51,-52,-53,47,-29,-43,47,-10,-11,-12,-13,-15,-16,47,-28,-30,-31,-32,-33,-34,47,47,-37,-38,-39,-40,47,47,-44,-14,47,47,-45,-46,47,]),'LORE':([22,26,27,28,29,30,31,32,36,55,56,57,61,62,63,64,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,104,105,106,107,108,],[48,-47,-48,-49,-50,-51,-52,-53,48,-29,-43,48,-10,-11,-12,-13,-15,-16,48,-28,-30,-31,-32,-33,-34,48,48,-37,-38,-39,-40,48,48,-44,-14,48,48,-45,-46,48,]),'GTHAN':([22,26,27,28,29,30,31,32,36,55,56,57,61,62,63,64,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,104,105,106,107,108,],[49,-47,-48,-49,-50,-51,-52,-53,49,-29,-43,49,-10,-11,-12,-13,-15,-16,49,-28,-30,-31,-32,-33,-34,49,49,-37,-38,-39,-40,49,49,-44,-14,49,49,-45,-46,49,]),'GORE':([22,26,27,28,29,30,31,32,36,55,56,57,61,62,63,64,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,104,105,106,107,108,],[50,-47,-48,-49,-50,-51,-52,-53,50,-29,-43,50,-10,-11,-12,-13,-15,-16,50,-28,-30,-31,-32,-33,-34,50,50,-37,-38,-39,-40,50,50,-44,-14,50,50,-45,-46,50,]),'AND':([22,26,27,28,29,30,31,32,36,55,56,57,61,62,63,64,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,104,105,106,107,108,],[51,-47,-48,-49,-50,-51,-52,-53,51,-29,-43,51,-10,-11,-12,-13,-15,-16,51,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,51,-44,-14,51,51,-45,-46,51,]),'OR':([22,26,27,28,29,30,31,32,36,55,56,57,61,62,63,64,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,104,105,106,107,108,],[52,-47,-48,-49,-50,-51,-52,-53,52,-29,-43,52,-10,-11,-12,-13,-15,-16,52,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-14,52,52,-45,-46,52,]),'DOT':([22,26,27,28,29,30,31,32,36,55,56,57,61,62,63,64,66,67,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,104,105,106,107,108,],[53,-47,-48,-49,-50,-51,-52,-53,53,53,53,53,-10,-11,-12,-13,-15,-16,53,-28,53,53,53,53,53,53,53,53,53,53,53,53,53,-44,-14,53,53,-45,-46,53,]),'LCBRACKET':([22,26,27,28,29,30,31,32,55,56,61,62,63,64,66,67,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,91,94,106,107,],[54,-47,-48,-49,-50,-51,-52,-53,-29,-43,-10,-11,-12,-13,-15,-16,54,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,54,-14,-45,-46,]),'RPAREN':([26,27,28,29,30,31,32,55,56,57,58,61,62,63,64,66,67,68,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,99,100,105,106,107,],[-47,-48,-49,-50,-51,-52,-53,-29,-43,90,91,-10,-11,-12,-13,-15,-16,95,-27,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-14,106,107,-26,-45,-46,]),'COMMA':([26,27,28,29,30,31,32,55,56,61,62,63,64,66,67,68,69,73,74,75,76,77,78,79,80,81,82,83,84,85,86,90,94,105,106,107,],[-47,-48,-49,-50,-51,-52,-53,-29,-43,-10,-11,-12,-13,-15,-16,96,-27,-28,-30,-31,-32,-33,-34,-35,-36,-37,-38,-39,-40,-41,-42,-44,-14,-26,-45,-46,]),'RINT':([35,39,59,],[61,61,61,]),'RFLOAT':([35,39,59,],[62,62,62,]),'RBOOL':([35,39,59,],[63,63,63,]),'RCHAR':([35,39,59,],[64,64,64,]),'AMPERSAND':([35,39,59,],[65,65,65,]),'RSTRING':([35,39,59,],[66,66,66,]),'RUSIZE':([35,39,59,],[67,67,67,]),'RELSE':([38,101,],[71,-9,]),'RTOSTRING':([53,],[87,]),'RTOOWNED':([53,],[88,]),'RSTR':([65,],[94,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instructions':([0,54,],[2,89,]),'instruction':([0,2,54,89,],[3,14,3,14,]),'declaration':([0,2,54,89,],[4,4,4,4,]),'asignation':([0,2,54,89,],[5,5,5,5,]),'println':([0,2,54,89,],[6,6,6,6,]),'if_st':([0,2,54,71,89,],[7,7,7,98,7,]),'function':([0,2,54,89,],[8,8,8,8,]),'expression':([12,20,23,24,25,37,40,41,42,43,44,45,46,47,48,49,50,51,52,93,96,103,],[22,36,55,56,57,69,74,75,76,77,78,79,80,81,82,83,84,85,86,104,105,108,]),'statement':([22,71,91,],[38,97,102,]),'primitive_type':([35,39,59,],[60,73,92,]),'expressions':([37,],[68,]),'else_st':([38,],[70,]),'empty':([38,],[72,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instructions','init',1,'p_init','parser.py',33),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','parser.py',38),
  ('instructions -> instruction','instructions',1,'p_instructions_instr','parser.py',44),
  ('instruction -> declaration SEMICOLON','instruction',2,'p_instruction','parser.py',49),
  ('instruction -> asignation SEMICOLON','instruction',2,'p_instruction','parser.py',50),
  ('instruction -> println SEMICOLON','instruction',2,'p_instruction','parser.py',51),
  ('instruction -> if_st','instruction',1,'p_instruction','parser.py',52),
  ('instruction -> function','instruction',1,'p_instruction','parser.py',53),
  ('statement -> LCBRACKET instructions RCBRACKET','statement',3,'p_statement','parser.py',58),
  ('primitive_type -> RINT','primitive_type',1,'p_primitive_type','parser.py',63),
  ('primitive_type -> RFLOAT','primitive_type',1,'p_primitive_type','parser.py',64),
  ('primitive_type -> RBOOL','primitive_type',1,'p_primitive_type','parser.py',65),
  ('primitive_type -> RCHAR','primitive_type',1,'p_primitive_type','parser.py',66),
  ('primitive_type -> AMPERSAND RSTR','primitive_type',2,'p_primitive_type','parser.py',67),
  ('primitive_type -> RSTRING','primitive_type',1,'p_primitive_type','parser.py',68),
  ('primitive_type -> RUSIZE','primitive_type',1,'p_primitive_type','parser.py',69),
  ('declaration -> RLET RMUT ID COLON primitive_type EQUAL expression','declaration',7,'p_declaration_mut','parser.py',87),
  ('declaration -> RLET ID COLON primitive_type EQUAL expression','declaration',6,'p_declaration','parser.py',92),
  ('asignation -> ID EQUAL expression','asignation',3,'p_asignation','parser.py',97),
  ('println -> RPRINTLN NOT LPAREN expressions RPAREN','println',5,'p_println','parser.py',102),
  ('if_st -> RIF expression statement else_st','if_st',4,'p_ifst','parser.py',107),
  ('else_st -> RELSE statement','else_st',2,'p_else_st','parser.py',112),
  ('else_st -> RELSE if_st','else_st',2,'p_else_st','parser.py',113),
  ('else_st -> empty','else_st',1,'p_else_st','parser.py',114),
  ('function -> RFN ID LPAREN RPAREN statement','function',5,'p_function','parser.py',122),
  ('expressions -> expressions COMMA expression','expressions',3,'p_expressions','parser.py',130),
  ('expressions -> expression','expressions',1,'p_expressions_expression','parser.py',136),
  ('expression -> expression RAS primitive_type','expression',3,'p_expr_cast','parser.py',141),
  ('expression -> MINUS expression','expression',2,'p_expr_uminus','parser.py',146),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser.py',151),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser.py',152),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser.py',153),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser.py',154),
  ('expression -> expression MODULE expression','expression',3,'p_expression','parser.py',155),
  ('expression -> expression EQUALS expression','expression',3,'p_expr_relational','parser.py',160),
  ('expression -> expression NEQUALS expression','expression',3,'p_expr_relational','parser.py',161),
  ('expression -> expression LTHAN expression','expression',3,'p_expr_relational','parser.py',162),
  ('expression -> expression LORE expression','expression',3,'p_expr_relational','parser.py',163),
  ('expression -> expression GTHAN expression','expression',3,'p_expr_relational','parser.py',164),
  ('expression -> expression GORE expression','expression',3,'p_expr_relational','parser.py',165),
  ('expression -> expression AND expression','expression',3,'p_expr_logic','parser.py',170),
  ('expression -> expression OR expression','expression',3,'p_expr_logic','parser.py',171),
  ('expression -> NOT expression','expression',2,'p_expr_logic','parser.py',172),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expr_par','parser.py',180),
  ('expression -> expression DOT RTOSTRING LPAREN RPAREN','expression',5,'p_expr_tostr','parser.py',185),
  ('expression -> expression DOT RTOOWNED LPAREN RPAREN','expression',5,'p_expr_tostr','parser.py',186),
  ('expression -> INT','expression',1,'p_literal','parser.py',191),
  ('expression -> FLOAT','expression',1,'p_literal','parser.py',192),
  ('expression -> STRING','expression',1,'p_literal','parser.py',193),
  ('expression -> CHAR','expression',1,'p_literal','parser.py',194),
  ('expression -> RTRUE','expression',1,'p_true','parser.py',199),
  ('expression -> RFALSE','expression',1,'p_false','parser.py',204),
  ('expression -> ID','expression',1,'p_access','parser.py',209),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',214),
]
